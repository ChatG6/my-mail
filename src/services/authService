import axios from 'axios';

const BASE_URL = 'https://apisample-git-main-maan-najjars-projects.vercel.app';

// Login service
export const login = async (email, password) => {
  try {
    const formData = new URLSearchParams();
    formData.append('grant_type', 'password');
    formData.append('username', email);
    formData.append('password', password);

    const response = await axios.post(`${BASE_URL}/token`, formData, {
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
        'Accept': 'application/json'
      }
    });

    // Store token in localStorage
    localStorage.setItem('access_token', response.data.access_token);

    return response.data;
  } catch (error) {
    // Handle login errors
    console.error('Login error:', error);
    throw error;
  }
};

// Logout service
export const logout = () => {
  // Remove token from localStorage
  localStorage.removeItem('access_token');
};

// Check if user is authenticated
export const isAuthenticated = () => {
  const token = localStorage.getItem('access_token');
  return !!token; // Returns true if token exists
};

// Get current user profile
export const getUserProfile = async () => {
  try {
    const token = localStorage.getItem('access_token');
    
    if (!token) {
      throw new Error('No access token');
    }

    const response = await axios.get(`${BASE_URL}/profile`, {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });

    return response.data;
  } catch (error) {
    console.error('Failed to fetch user profile:', error);
    throw error;
  }
};

// Refresh token service
export const refreshToken = async () => {
  try {
    const token = localStorage.getItem('access_token');
    
    const response = await axios.post(`${BASE_URL}/refresh`, {}, {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });

    // Update token in localStorage
    localStorage.setItem('access_token', response.data.access_token);

    return response.data;
  } catch (error) {
    // Logout user if refresh fails
    logout();
    throw error;
  }
};
