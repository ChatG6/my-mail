import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';

// Import services
import { fetchEmails } from '../services/emailService';
import { logout } from '../services/authService';

// Import UI components
import Card from '../components/ui/Card';
import Input from '../components/ui/Input';
import Button from '../components/ui/Button';

const InboxPage = () => {
  const navigate = useNavigate();
  const [selectedFolder, setSelectedFolder] = useState('Inbox');
  const [emails, setEmails] = useState({
    folders: [
      { label: 'Inbox', messages: [] },
      { label: 'Starred Messages', messages: [] }
    ],
    user: { full_name: 'User' }
  });
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState('');

  useEffect(() => {
    const loadEmails = async () => {
      try {
        // Use fetchEmails service
        const data = await fetchEmails();
        setEmails(prevState => ({
          ...prevState,
          folders: data.folders || prevState.folders,
          user: data.user || prevState.user
        }));
      } catch (err) {
        setError('Failed to load emails');
        console.error('Emails fetch error:', err);
        
        // Logout and redirect if token is invalid
        logout();
        navigate('/');
      } finally {
        setLoading(false);
      }
    };

    loadEmails();
  }, [navigate]);

  const handleLogout = () => {
    logout();
    navigate('/');
  };

  const currentFolder = emails.folders.find(f => f.label === selectedFolder);

  if (loading) {
    return (
      <div className="flex items-center justify-center h-screen">
        Loading...
      </div>
    );
  }

  if (error) {
    return (
      <div className="flex items-center justify-center h-screen text-red-600">
        {error}
      </div>
    );
  }

  return (
    <div className="flex h-screen bg-gray-50">
      {/* Sidebar */}
      <Card className="w-64 bg-white border-r p-0 overflow-hidden">
        <div className="p-4 border-b">
          <h1 className="text-2xl font-bold text-blue-600">MyMail</h1>
        </div>
        
        <nav>
          {emails.folders.map((folder) => (
            <Button
              key={folder.label}
              onClick={() => setSelectedFolder(folder.label)}
              variant={selectedFolder === folder.label ? 'primary' : 'secondary'}
              className="w-full justify-between px-4 py-3 rounded-none"
            >
              {folder.label}
              <span className="text-sm text-gray-500">
                {folder.messages.length}
              </span>
            </Button>
          ))}
        </nav>
      </Card>

      {/* Main Content */}
      <div className="flex-1 flex flex-col">
        {/* Top Bar */}
        <Card className="bg-white border-b p-4 flex items-center justify-between">
          <div className="flex items-center space-x-4 flex-1">
            <span>Welcome, {emails.user.full_name}</span>
            <Input 
              type="text" 
              placeholder="Search emails..." 
              className="flex-1"
            />
          </div>
          
          <Button 
            onClick={handleLogout}
            variant="danger"
          >
            Logout
          </Button>
        </Card>

        {/* Email List */}
        <Card className="flex-1 overflow-auto p-4 m-4 bg-white">
          <h2 className="text-xl font-semibold mb-4">{selectedFolder}</h2>
          
          {currentFolder?.messages.length === 0 ? (
            <div className="text-center text-gray-500">
              No emails in this folder
            </div>
          ) : (
            currentFolder?.messages.map((email, index) => (
              <Card 
                key={index}
                className="mb-4 p-3 hover:bg-gray-50 cursor-pointer"
              >
                <div className="flex justify-between items-center">
                  <div>
                    <h3 className="font-semibold">{email.subject}</h3>
                    <p className="text-sm text-gray-600">{email.sender}</p>
                  </div>
                  <span className="text-sm text-gray-500">
                    {new Date(email.date).toLocaleDateString()}
                  </span>
                </div>
              </Card>
            ))
          )}
        </Card>
      </div>
    </div>
  );
};

export default InboxPage;
